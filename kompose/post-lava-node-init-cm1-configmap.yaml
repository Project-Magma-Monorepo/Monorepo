apiVersion: v1
data:
  post_node_init.sh: "#!/bin/sh\nset -e\nset -o pipefail\n\noperator_address() {\n    lavad q staking validators -o json | jq -r '.validators[0].operator_address'\n}\n\ncheck_votes_status() {\n  lavad q gov proposals --output json | jq -r '.proposals[] | select(.status == \"PROPOSAL_STATUS_VOTING_PERIOD\")' \n}\n\n# get_base_specs() {\n#     local priority_specs=(\n#         \"specs/mainnet-1/specs/ibc.json\"\n#         \"specs/mainnet-1/specs/cosmoswasm.json\"\n#         \"specs/mainnet-1/specs/tendermint.json\"\n#         \"specs/mainnet-1/specs/cosmossdk.json\"\n#         \"specs/testnet-2/specs/cosmossdkv45.json\"\n#         \"specs/testnet-2/specs/cosmossdk_full.json\"\n#         \"specs/mainnet-1/specs/cosmossdkv50.json\"\n#         \"specs/mainnet-1/specs/ethermint.json\"\n#         \"specs/mainnet-1/specs/ethereum.json\"\n#         \"specs/mainnet-1/specs/solana.json\"\n#         \"specs/mainnet-1/specs/aptos.json\"\n#         \"specs/mainnet-1/specs/btc.json\"\n#     )\n\n#     (IFS=,; echo \"${priority_specs[*]}\")\n# }\n\nvote_yes_on_all_pending_proposals() {\n  echo \"Waiting for at least one proposal to be active\"\n  while true; do\n    sleep 1\n    res=$(check_votes_status)\n    if [ -n $res ]; then\n      echo \"No active proposals yet\"\n    else\n      echo \"Found active proposal!\"\n      lavad q gov proposals --output json | jq -r '.proposals[] | select(.status == \"PROPOSAL_STATUS_VOTING_PERIOD\") | .id' | while read -r proposal_id; do\n        echo \"$FROM voting yes on proposal id: $proposal_id\"\n        lavad tx gov vote $proposal_id yes -y --from $FROM --gas-adjustment \"1.5\" --gas \"auto\" --gas-prices $GASPRICE > /dev/null &\n      done\n      lavad q gov proposals --output json | jq -r '.proposals[] | select(.status == \"PROPOSAL_STATUS_VOTING_PERIOD\") | .id' | while read -r proposal_id; do\n        echo \"Waiting for proposal id: $proposal_id to pass...\"\n        until [ \"$(lavad q gov proposal $proposal_id --output json | jq -r .status)\" == \"PROPOSAL_STATUS_PASSED\" ]; do\n          echo \"Proposal id: $proposal_id didn't pass yet...\"\n          sleep 1\n        done\n        echo \"Proposal id: $proposal_id finally passed!\"\n      done\n      break\n    fi\n  done\n}\n\necho \"### Starting post node init ###\"\nwget -O jq https://github.com/jqlang/jq/releases/download/jq-1.7.1/jq-linux-amd64\nchmod +x ./jq\nmv jq /usr/bin\n\nGASPRICE=\"${GASPRICE:-0.000000001ulava}\"\nFROM=\"${FROM:-servicer1}\"\nNODE=\"${NODE:-tcp://lava-node:26657}\"\n\nlavad config node $NODE\n(\ncd /lava/specs/mainnet-1/specs/\n# specs=$(get_base_specs)\nlavad tx gov submit-legacy-proposal spec-add ./ibc.json,./tendermint.json --lava-dev-test -y --from $FROM --gas-adjustment \"1.5\" --gas \"auto\" --gas-prices $GASPRICE\n)\nvote_yes_on_all_pending_proposals\n\n\ncd /lava/specs/mainnet-1/specs/\nlavad tx gov submit-legacy-proposal spec-add ./cosmossdk.json --lava-dev-test -y --from $FROM --gas-adjustment \"1.5\" --gas \"auto\" --gas-prices $GASPRICE\nvote_yes_on_all_pending_proposals\n\ncd /lava/specs/mainnet-1/specs/\nlavad tx gov submit-legacy-proposal spec-add ./lava.json,./sui.json --lava-dev-test -y --from $FROM --gas-adjustment \"1.5\" --gas \"auto\" --gas-prices $GASPRICE\nvote_yes_on_all_pending_proposals\n\necho \"Adding plan: DefaultPlan\"\nlavad tx gov submit-legacy-proposal plans-add /lava/cookbook/plans/test_plans/default.json -y --from $FROM --gas-adjustment \"1.5\" --gas \"auto\" --gas-prices $GASPRICE\nvote_yes_on_all_pending_proposals\n\necho \"Buying plan: DefaultPlan for $FROM\"\nlavad tx subscription buy DefaultPlan $(lavad keys show $FROM -a) --enable-auto-renewal -y --from $FROM --gas-adjustment \"1.5\" --gas \"auto\" --gas-prices $GASPRICE 2> /dev/null\n\nsleep 4\necho \"Staking provider\"\nPROVIDERSTAKE=\"500000000000ulava\"\n\n# Stake SUI JSON-RPC provider on port 80\necho \"Staking SUI JSON-RPC provider\"\nSUI_PROVIDER_ADDRESS=\"nginx:80\"\nlavad tx pairing stake-provider SUIJSONRPC $PROVIDERSTAKE \"$SUI_PROVIDER_ADDRESS,1\" 1 $(operator_address) -y --delegate-commission 50 --from servicer1 --provider-moniker \"servicer1-sui\" --gas-adjustment \"1.5\" --gas \"auto\" --gas-prices $GASPRICE\n\nsleep 4\n# Stake LAV1 provider on port 81 (this will cover all LAV1 API interfaces)\necho \"Staking LAV1 provider\"\nLAV_PROVIDER_ADDRESS=\"nginx:81\"\nlavad tx pairing stake-provider LAV1 $PROVIDERSTAKE \"$LAV_PROVIDER_ADDRESS,1\" 1 $(operator_address) -y --delegate-commission 50 --from servicer2 --provider-moniker \"servicer2-lav\" --gas-adjustment \"1.5\" --gas \"auto\" --gas-prices $GASPRICE\n\n\necho \"### Post node init finished successfully ###\"\n\n# Exit with success\nexit 0"
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: post-lava-node-init
  name: post-lava-node-init-cm1
